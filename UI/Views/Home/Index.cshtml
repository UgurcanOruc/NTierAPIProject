@model HomeIndexViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-md-12">
        <div class="row ">
            <div class="col-md-12 d-flex justify-content-between">
                <form id="searchForm" asp-action="Index">

                    <input type="text" asp-for="Search" id="searchBox" placeholder="Search on Bike Name, Station Name or Station Address" style="line-height: 2;" />
                <input id="searchBtn" type="submit" value="Search" class="btn btn-primary mb-1" />
            </form>
            <a href="@Url.Action("CreateBike", "Home")" class="btn btn-primary">Add Bike</a>
            </div>
        </div>
        <div data-bind='simpleGrid: gridViewModel' class="mt-1"> </div>
        <button data-bind='click: sortByName'> Sort by name  </button>
        <button data-bind='click: jumpToFirstPage, enable: gridViewModel.currentPageIndex'> Jump to first page </button>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div id="barChart"></div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.5.1/knockout-latest.js"
        integrity="sha512-2AL/VEauKkZqQU9BHgnv48OhXcJPx9vdzxN1JrKDVc4FPU/MEE/BZ6d9l0mP7VmvLsjtYwqiYQpDskK9dG8KBA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://knockoutjs.com/examples/resources/knockout.simpleGrid.3.0.js"></script>
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>

<script>
    $(document).ready(function () {
        const modelData = JSON.parse('@Html.Raw(Json.Serialize(Model.Bikes))');

        var PagedGridModel = function (items) {
            this.items = ko.observableArray(items);

            this.sortByName = function () {
                this.items.sort(function (a, b) {
                    return a.name < b.name ? -1 : 1;
                });
            };

            this.jumpToFirstPage = function () {
                this.gridViewModel.currentPageIndex(0);
            };

            this.gridViewModel = new ko.simpleGrid.viewModel({
                data: this.items,
                columns: [
                    { headerText: "Bike Name", rowText: "name" },
                    { headerText: "Station Name", rowText: "stationName" },
                    { headerText: "Station Address", rowText: "stationAddress" }
                ],
                pageSize: 10
            });
        };
        ko.applyBindings(new PagedGridModel(modelData));
    });

    document.getElementById('searchBox').onkeyup = function () {
        var searchPharase = document.getElementById('searchBox').value.trim();
        if (searchPharase.length >= 3 || event.key === "Backspace") {
            document.getElementById('searchForm').submit();
        }
    };

    Highcharts.chart('barChart', {
        chart: {
            plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false,
            type: 'pie'
        },
        title: {
            text: 'Station Densities'
        },
        accessibility: {
            point: {
                valueSuffix: '%'
            }
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                dataLabels: {
                    enabled: true,
                }
            }
        },
        series: [{
            name: 'Bikes',
            colorByPoint: true,
            data: JSON.parse('@Html.Raw(Json.Serialize(Model.ChartModel))')
        }]
    });
</script>
